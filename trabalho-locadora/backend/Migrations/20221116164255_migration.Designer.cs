// <auto-generated />
using System;
using Locadora;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace meuProjeto.Migrations
{
    [DbContext(typeof(Database))]
    [Migration("20221116164255_migration")]
    partial class migration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("Locadora.Aluguel", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("ClienteID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAluguel")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataLimite")
                        .HasColumnType("TEXT");

                    b.Property<int>("EstadoDevolução")
                        .HasColumnType("INTEGER");

                    b.Property<long>("FilmeID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("ClienteID");

                    b.HasIndex("FilmeID");

                    b.ToTable("Alugueis");
                });

            modelBuilder.Entity("Locadora.Cliente", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CPF")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeCompleto")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("dataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("telefone")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Locadora.Filme", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Classificacao")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAdicionado")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Genero")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAlugado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<float?>("Preco")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.ToTable("Filmes");
                });

            modelBuilder.Entity("Locadora.Aluguel", b =>
                {
                    b.HasOne("Locadora.Cliente", "ClienteAlugador")
                        .WithMany()
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Locadora.Filme", "FilmeAlugado")
                        .WithMany()
                        .HasForeignKey("FilmeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClienteAlugador");

                    b.Navigation("FilmeAlugado");
                });
#pragma warning restore 612, 618
        }
    }
}
